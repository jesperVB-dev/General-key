from __future__ import print_function
import random
from more_itertools import sliced
from enum import Enum

class funcs:
    def BytetoStr(self, Num):
        Num = int(Num)
        Numb = str(int(str(Num),2))
        if len(Numb) != 39:
            Numb = "0"*(39-len(Numb)) + Numb
        return Numb

    def StrtoByte(self, Num):
        return '{0:0128b}'.format(long(Num))

class Codes(Enum):
    CODES1 = {'!': '223711988482578839167554301107718628872', ' ': '325492440678072706070077008431970232161', '+': '092350049872509529319966547931602542496', '-': '156971713139448142362651446673315474110', ',': '158790547773344277391543655636093406504', '.': '089329256166393022057145830063559468902', '1': '223653451718922676529206061398969693454', '0': '071477964303292940084817286209574756789', '3': '285903239735584233457929586923786677627', '2': '162379041188884738142043558610311247163', '5': '214746415440257677663923901393564604934', '4': '023067454462466577804481872052392451192', '7': '182184053858723253420437595441685775087', '6': '198700797479417576944733033267911233502', '9': '282369897535517138636673634685606466731', '8': '288160852390629383754685249656126975816', '=': '254772894102652385631317081848439885135', '?': '298145213569046416817752706215466734690', 'A': '323460340065740574813108889427310739965', 'C': '164337590852655967401306420104766713330', 'B': '183955907137838333381215293795748167644', 'E': '257344123060396998675583049615249764552', 'D': '097684612622019654966435538833299161252', 'G': '195668489305912809334164192283759584250', 'F': '038437303004814454393031605902117369103', 'I': '293212513967817912610407282890163401878', 'H': '174592679465567366225928027771138572398', 'K': '225873340683480464708797817607172374573', 'J': '227720228715458539673720265877945269513', 'M': '150391936411334619858536217004588867076', 'L': '249535535824185480019091656846377591186', 'O': '053861696503888608381430769088175125569', 'N': '008025463596484473985176827333011570611', 'Q': '199613618357115661194878524366699394840', 'P': '318442084522112690956812177160889887157', 'S': '014054103046629906859552629049214332085', 'R': '052816763599258087698858268178406710736', 'U': '038253544718400571474495880524230521062', 'T': '039848399203910070484010155041451168668', 'W': '041267408630596270766674799547788579460', 'V': '189001367504735370273294358652873488635', 'Y': '160134292233504456482945047130591954877', 'X': '311788538753469504367920134696796002484', 'Z': '044399241176395466001110496670208922671', 'a': '216155093813791208338325018482869256382', 'c': '291785480937554165446384737831000627743', 'b': '187445074396581802259215503620650658832', 'e': '291368138039625375823864468321132177330', 'd': '008318072417814978426592347553479092131', 'g': '295393467183527277840194964295024274231', 'f': '089900316468392826502117118820745596027', 'i': '101848323397935256405690704423883809334', 'h': '236276545562903416038588976937809178868', 'k': '298928792133589640053540297254063317913', 'j': '229615218707119940387997119280944819209', 'm': '171362044953319680005668983235482749210', 'l': '245707783720005765311398882018054883279', 'o': '133430804305629426943001812894913413214', 'n': '083717541668516074839063503031740563774', 'q': '190024521442504486208640071982436853575', 'p': '184870133707106829223977659076288947897', 's': '053156790318989290513038689965559374011', 'r': '264239136819193624902667819117151737833', 'u': '301733511063690242562818028050349342892', 't': '150990461614659304519123720844394321015', 'w': '021469506764132948228151449221052070868', 'v': '018639385892676276057883785889419222895', 'y': '290122665801446972809217011837654408616', 'x': '045724104293679694971249692023842568063', 'z': '280991831439579389443053831468662424814'}
    CODES2 = {'!': '168547944393136684067988044650189850734', ' ': '093523546462495360411006561873736501846', '+': '251614497841952281624177949222682176284', '-': '088685758842605633247486086823071535388', ',': '123514739192520201645032018529732468800', '.': '319274115169400475194522943724242829366', '1': '217582265430000970856469896766901001878', '0': '212265007440252224598571221632988482349', '3': '298668524163678191094339898496040654772', '2': '150588549236559990437030036114485445495', '5': '225567506047691146588987211067025458157', '4': '225832051047374062234356463673703525705', '7': '120953757407749071901500291653434353378', '6': '038457841699081205815339277602565112154', '9': '046670350505817600589435236279418977446', '8': '239963729065151825326737629834104974715', '=': '098490981997377445088032419647430649096', '?': '084956371723212250364617183178787524784', 'A': '094345781321660402943447331444558521140', 'C': '287990242397209301804688474642287837781', 'B': '022930779662766460119269347759933999703', 'E': '187391942065807529955389812153199665710', 'D': '280246890067636024865819047705107682108', 'G': '309832430971137408607574149064985037257', 'F': '193325742051610946871224044534093250660', 'I': '141799689485876903652309008317690827158', 'H': '282169151647369970137284422322970476505', 'K': '114347949814906771715245433732914366114', 'J': '212357490085266524893831893962177159391', 'M': '096479487342339616283597192614840344738', 'L': '237096584209812808884003679864215080685', 'O': '227830201448959174466694798515095858118', 'N': '167216724156163980429190188892661666487', 'Q': '173276099500808551757882471970977434083', 'P': '203386399887637924659643036546372471404', 'S': '318193250741829130607851455052099646301', 'R': '068260540540627510127471294116492533615', 'U': '307801666710772689164918960729012120172', 'T': '221379025163362492290722288467432543384', 'W': '045624930386040357894100419639796498363', 'V': '306359294313826757782109454176414405004', 'Y': '279260392237364133721230433808482445353', 'X': '033868010903032546307379108252808328770', 'Z': '040260700325631125686760686753657433523', 'a': '032422579127078939687598999687130742747', 'c': '106741588675482161632511044369923873406', 'b': '129808433449898480013339778346623321896', 'e': '111368576184856188034306822614714501103', 'd': '175817305994475366823097124572830910416', 'g': '060631197085871201077227354487081816823', 'f': '003985448877749908316096540874073347556', 'i': '161446731742479942821325259072194997274', 'h': '309454777030327651398247756898576228458', 'k': '051405049741671878278442915377784838441', 'j': '103738268054259015237373098431137578220', 'm': '074663135990140102585719932542146591356', 'l': '081112058393939287155418625082119231057', 'o': '204497998714085626111708760417002180940', 'n': '046238412468582788168785305929330476970', 'q': '081915129286127944390522716194100428051', 'p': '196156516510281270930842306070414105282', 's': '305850303455703882044438110716691124907', 'r': '172190311676319810163010281164518334995', 'u': '269281970217566757004287947879616062204', 't': '290549192841264249667717826182318215917', 'w': '244863262802331350136622837077291001208', 'v': '190369339999316690205269812001732954448', 'y': '298229630231965524841381098038955750802', 'x': '052107455817382553749341383431746652592', 'z': '264304536977410437299651887456871196685'}
    CODES3 = {'!': '186726064818889295728199389566370986951', ' ': '318926806084695681093441446423313777246', '+': '187495113775975514766574282156953087560', '-': '042397853147168704102334769788492585037', ',': '326527515197473637319975973569699025999', '.': '086266265736504383214655098999529117461', '1': '205108047001778743516047288285900288094', '0': '079537816765736319354156764773579312507', '3': '105620583109917472602334558669424519040', '2': '211781648970001799836002785668330136860', '5': '129071700822285616550663225955195538659', '4': '253963571026756222394408153312895990345', '7': '283199329170148738047901855957002043903', '6': '260438322468335632509813750622729004496', '9': '291649597327737207458005299431731685657', '8': '327552565659044089431554965144393124159', '=': '118370220017855028847520322364443701469', '?': '069740303940761067578179514091986312862', 'A': '303151976965180437673379676216461445060', 'C': '232311131463027338881300973763610368223', 'B': '244977821658403959494063672625359581394', 'E': '015167497086757129570564909128788737790', 'D': '104505677722066830740592822342649721075', 'G': '234993535393889161055458311925430457799', 'F': '009036970100630405334043984738764864129', 'I': '252343396377676896851549875088198759039', 'H': '239191599038284266485445260223468172484', 'K': '033331578765654562383611089411151960287', 'J': '065652532701586411677158022495478267178', 'M': '049294751446693644235988357219962094283', 'L': '117381027016268108763363120675727400244', 'O': '020819297613664875641501564375425089643', 'N': '129139560781666563621277696491683070176', 'Q': '222289637808119507828432507001148529256', 'P': '148749262072268924071563894212998903469', 'S': '187618967732733026312761827270465486734', 'R': '222528446067727931002630258804388731143', 'U': '201913578163970691081967308712397994433', 'T': '285458200597556837013199748235078049140', 'W': '252934561689854286590471356324168574728', 'V': '277790419777056028951861119359351140452', 'Y': '006261938736201898182983452419208353660', 'X': '218927974988310656335199293686236980971', 'Z': '169733483190875743682465528033947001227', 'a': '025920081288886999462148908691553046942', 'c': '259076743212902292466026454564686471688', 'b': '128194177018737282610474835065072555426', 'e': '087291918672343048738249085594746222411', 'd': '283867517170170387972420008376049293193', 'g': '294192810746441495350157180690255952592', 'f': '006646959480928419213974339254355339106', 'i': '176225095183268015514957748954518235690', 'h': '172729614700068754151618612500936419271', 'k': '258529958405954248282427416203588674635', 'j': '102769895795714433936724320727843729888', 'm': '175077249469703605292753176728436482694', 'l': '143792182054310929006385406900850254707', 'o': '081122219668897606823078825250537025213', 'n': '054009059760256791776525218988615862463', 'q': '221386485635315774981594928356132593219', 'p': '158074997971313702036876389334517495646', 's': '018178242045935363275151196217867002789', 'r': '161521440272317780567367462567567321737', 'u': '229911783445167376000127202461835920915', 't': '105852468278927452628951816602463795439', 'w': '179799636505844721724317670392178462288', 'v': '200741067345777847075279032095322318361', 'y': '108409720375400155050308766280406743190', 'x': '022782333827781186783863368728475048968', 'z': '147312714687106139135733897668297956039'}
    CODES1CODE = 147910773795238466060650286963108477076
    CODES2CODE = 180245733610197578742142934818201093286
    CODES3CODE = 322426485157612776389569712999219628951

EnOrDe = str(raw_input("Encode or Decode: "))

if EnOrDe == "encode":
    ToEncode = str(raw_input("enter string you want to encode: "))
    for j in range(0,len(ToEncode)):
        if j%5==0:
            Code = random.randint(1,3)
            [print(funcs().StrtoByte(list(Codes)[i].value), end="") for i in range(0,3) if Code == i+1]
        [print(funcs().StrtoByte(list(Codes)[i+3].value.get(ToEncode[j])), end="") for i in range(0,3) if Code == i+1]
	    
elif EnOrDe == "decode":
    ToDecode = str(raw_input("enter string you want to decode: "))
    Bytes = list(sliced(ToDecode, 128))
    ToDecode = ""
    PartToDecode = ""
    UsingSequence = 0
    #print(Bytes)
    ToDecode = ''.join([funcs().BytetoStr(int(i)) for i in Bytes])
    for i in range(0, len(ToDecode),39):
        PartToDecode = ''.join([str(ToDecode[i+j]) for j in range(0,39)])
        for j in range(0,3):
            if str(PartToDecode) == str(list(Codes)[j].value):
                UsingSequence = j+1
        #print(UsingSequence)
        [print(Letter, end="") for Letter, Code in list(Codes)[2+UsingSequence].value.items() if str(Code) == str(PartToDecode)]

    
